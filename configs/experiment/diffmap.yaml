# @package _global_

# Defines default config.
defaults:
  - /data: rooms
  - /diffusion_model@model: ddpm
  - /diffusion_model/model@model.params.unet_config: unet
  - /diffusion_model/scheduler@model.params.scheduler_config: linear_decrease
  - /diffusion_model/loss@model.params.flowmap_loss_config: flowmap # flowmap loss config
  - /modalities@model.params.modalities_config: diffmap

# Overrides image size in data and model children configs.
scenes: '000001'
val_scenes: null
image_size: 64
n_future: 1
channels_m: 3

data:
  params:
    batch_size: 16
    num_workers: 8
    train:
      params:
        scenes: ${scenes}
        val_scenes: ${val_scenes}
    validation:
      params:
        scenes: ${scenes}
        val_scenes: ${val_scenes}
    test: null

model:
  params:
    log_every_t: 200 #when logging generated samples, frequency of logging for intermediate samples  
    timesteps: 1000 #sampling timesteps in forward/backward
    channels: 6 #number of noisy channels as input of U-Net
    n_future: ${n_future}
    conditioning_key: concat #defines the type of conditioning ie (crossattn, concat, hybrid)
    parameterization: eps
    unet_trainable: all  #defines trainable modules (all=True, attn, conv_in, conv_io, conv_out, conv_io_attn, false)
    compute_weights: True
    ckpt_path: null

    unet_config:
      params:
        in_channels: ${linear:${n_future}, 6, 3} #number of input channels U-Net, 6 = 2*3 noisy input channels + 3 for conditionning
        out_channels: ${linear:${n_future}, 9, 3} #number of output channels U-Net, (rbg trgt + depth trgt + flow) * n_future + depth_ctxt 3*3 + 3 noisy output channels
        model_channels: 320 #number of intermediate layer channels across the U-Net
        attention_resolutions: [ 4, 2, 1]
        # use_spatial_transformer: True
        # transformer_depth: 1
        # context_dim: 768  #dim of crossattn conditioning

lightning:
  find_unused_parameters: true

  callbacks: #configs for image logger
    image_logger:
      target: ldm.visualization.image_loggers.ImageLoggerDiffmap
      params:
        batch_frequency: 400 #frequency of logging images (counted in iterations) for train and val
        max_images: 4 #number of samples logged
        increase_log_steps: False
        log_all_val: True # permet de logger la validation, sinon ne log pas
        log_first_step: True
        log_images_kwargs:
          use_ema_scope: False
          inpaint: False
          plot_progressive_rows: False #defines whether logging intermediate steps when sampling images
          plot_diffusion_rows: False #defines whether logging diffusion forward process
          N: 4 #number of reconstructions/samples logged
          unconditional_guidance_scale: 0.0 #classifier-free guidance coeff
          unconditional_guidance_label: [""]

  trainer:
    gpus: [0]
    max_epochs: 4000 #max number of epochs performed, 1000 is the default
    max_steps: 30000  #max number of iterations performed, 1000 is the default
    limit_val_batches: 0.0 # disable validation
    # check_val_every_n_epoch: 30 #frequency of validation in epochs
    # val_check_interval: 5 #frequency of validation in iterations

experiment_cfg:
  logdir: logs/
  name: rooms_overfit_diffmap